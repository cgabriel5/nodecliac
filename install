#!/bin/bash

# Only argument allowed for now is a branch name (default to master).
branch_name="$1"; if [[ -z "$branch_name" ]]; then branch_name="master"; fi

# Vars.
outputdir="$HOME/.nodecliac-src"
timestamp=$(($(date +%s%N)/1000000)) # Generate timestamp.
tarball_link="https://api.github.com/repos/cgabriel5/nodecliac/tarball/$branch_name"

# If ~/.nodecliac exists rename folder to allow for new one.
if [[ -e ~/.nodecliac ]]; then
	mv ~/.nodecliac "$HOME/.nodecliac.bak.$timestamp"
fi

# Clone repo with first found command. (order: curl > wget > git)
if [[ -n "$(command -v curl)" ]]; then
	curl -Ls "$tarball_link" -o ~/.nodecliac-src.tar.gz
	tar -xzf ~/.nodecliac-src.tar.gz -C ~/
	mv ~/cgabriel5-nodecliac-* "$outputdir"
elif [[ -n "$(command -v wget)" ]]; then
	wget -q -c "$tarball_link" -O ~/.nodecliac-src.tar.gz
	tar -xzf ~/.nodecliac-src.tar.gz -C ~/
	mv ~/cgabriel5-nodecliac-* "$outputdir"
elif [[ -n "$(command -v git)" ]]; then
	git clone -q git@github.com:cgabriel5/nodecliac.git "$outputdir"
fi

# Create needed directories.
mkdir -p ~/.nodecliac/{registry,src}

# Copy the Perl/Shell nodecliac scripts. [https://superuser.com/a/114198]
cp -p "$outputdir"/src/scripts/*.* ~/.nodecliac/src

# Copy registry completion packages.
cp -p -r "$outputdir"/resources/nodecliac/* ~/.nodecliac/registry
rm -rf ~/.nodecliac/registry/__acmaps # Remove acmap files.

# Create setup file.
echo "{ \"force\": false, \"rcfilepath\": \"$HOME/.bashrc\", \"time\": \"$timestamp\", \"aconly\": true }" > ~/.nodecliac/.setup.db.json

# Strip comments/empty lines from files.
perl -pi -e 's/^\s*#(?!!).*?$//g;s/\s{1,}#\s{1,}.+$//g;s!^\s+?$!!' ~/.nodecliac/src/*.{sh,pl}
# [http://isunix.github.io/blog/2014/07/24/perl-one-liner-to-remove-blank-lines/].
# [https://stackoverflow.com/a/6995010], [https://unix.stackexchange.com/a/179449]

# Add nodecliac to ~/.bashrc if not already.
if [[ -z "$(grep -o "ncliac=~/.nodecliac/src/main.sh" ~/.bashrc)" ]]; then
	echo -e '\nncliac=~/.nodecliac/src/main.sh;if [ -f "$ncliac" ];then source "$ncliac";fi;' >> ~/.bashrc
fi

# Modify nodecliac.acdef for aconly.
perl -i -lne 'if (/^(#|.uninstall --| )/) { if ($1 eq " ") { print "\n --"} elsif ($1 eq ".uninstall --") { print "$1" } else { print } }' ~/.nodecliac/registry/nodecliac/nodecliac.acdef

# Create bin file.
sudo cp -p "$outputdir"/uninstall /usr/local/bin/nodecliac
sudo chmod +x /usr/local/bin/nodecliac

# Delete cloned repo.
rm -rf ~/.nodecliac-src*
