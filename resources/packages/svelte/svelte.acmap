# Experimental svelte cli acmap.

# [https://wmzy.github.io/svelte-cli/]

# Usage: svelte <command> [options]

# Options:
#   -V, --version                              output the version number
#   -h, --help                                 output usage information

# Commands:
#   create [options] <app-name>                create a new project powered by svelte-cli-service
#   add [options] <plugin> [pluginOptions]     install a plugin and invoke its generator in an already created project
#   invoke [options] <plugin> [pluginOptions]  invoke the generator of a plugin in an already created project
#   inspect [options] [paths...]               inspect the webpack config in a project with svelte-cli-service
#   serve [options] [entry]                    serve a .js or .svelte file in development mode with zero config
#   build [options] [entry]                    build a .js or .svelte file in production mode with zero config
#   ui [options]                               start and open the svelte-cli ui
#   config [options] [value]                   inspect and modify the config
#   upgrade [semverLevel]                      upgrade svelte cli service / plugins (default semverLevel: minor)
#   info                                       print debugging information about your environment

#   Run svelte <command> --help for detailed usage of given command.

@placehold = true

# Universal/shared flags.
* = --help::h

svelte = --version::V

svelte.{add,invoke} = [
	--registry=
]

svelte.build = [
	--target::t=(app lib wc wc-async)
	--name::n=
	--dest::d=(dist)
]

svelte.config = [
	--get::g=
	--set::s=
	--delete::d=
	--edit::e?
	--json?
]

svelte.create = [
	--preset::p=
	--default::d?
	--inlinePreset::i=
	--packageManager::m=
	--registry::r=
	--git::g=
	--no-git::n?
	--force::f?
	--clone::c?
	--proxy::x?
	--bare::b?
	--skipGetStarted?
]

svelte.{info,upgrade}

svelte.inspect = [
	--mode=
	--rule=
	--plugin=
	--rules?
	--plugins?
	--verbose::v?
]

svelte.serve = [
	--open::o?
	--copy::c?
]

svelte.ui= [
	--host::H=
	--port::p=
	--dev::D?
	--quiet?
	--headless?
]
